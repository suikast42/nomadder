---
- name: "Update installed packages"
  become: true
  apt:
    only_upgrade: true
    update_cache: true
    force_apt_get: true
    state: latest
  register: update


- debug:
    msg: "{{ update }}"


- name: "Install base packages"
  become: true
  apt:
    name:
      - snapd
      - thin-provisioning-tools
      - lvm2
      - tree
      - htop
      - zsh
      - jq
      - zip
      - unzip
      - dos2unix
      - ruby-dev
      - fortune-mod
      - python3-pip
      - fzf
      - net-tools
      - ncdu
      - open-iscsi
      - nfs-common
      - python3-docker
      - traceroute
      - ubuntu-release-upgrader-core
      - neofetch
      - tldr
    #      - cadvisor

    state: present
  register: install_apt

- debug:
    msg: "{{ install_apt }}"

- name: "Create tldr folder"
  become: false
  file:
    state: directory
    path: "/home/{{ansible_user}}/.local/share/tldr"
    mode: '0755'

#- name: "TlDR update"
#  failed_when: false
#  become: false
#  shell: |
#    tldr -u

- name: Install snap packeges
  become: true
  community.general.snap:
    name:
      - direnv
    state: present
  register: install_snap

- debug:
    msg: "{{ install_snap }}"

- name: Upgrade pip
  pip:
    name:
      - pip
    extra_args: --user --upgrade  --break-system-packages
  register: install_pip1

- debug:
    msg: "{{ install_pip1 }}"


- name: Install pip modules
  pip:
    name:
      - pexpect
      - kubernetes
      - python-nomad
    extra_args: --user --break-system-packages
  register: install_pip2

- debug:
    msg: "{{ install_pip2 }}"
#- name: "Update pip and install pip modules"
#  delay: 0
#  async: 120
#  poll: 1
#  shell: |
#    pip3 install --upgrade pip --user
#    pip3 install pexpect --user
#    pip3 install kubernetes --user
#  register: install
#
#- debug:
#    msg: "{{ install.stdout_lines }}"

- name: "Apt clean"
  become: true
  apt:
    autoclean : true
    autoremove: true
