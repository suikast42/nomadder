- name: Deploy observability
  block:

  - name: "Delete local conf dir if exists"
    changed_when: false
    delegate_to: localhost
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}"
      state: absent

  - name: "Create shell script dir if not exists"
    delegate_to: localhost
    changed_when: false
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}/shell"
      state: directory
      mode: '0755'

  - name: "Create grafana agent conf dir if not exists"
    delegate_to: localhost
    changed_when: false
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}/grafana_agent"
      state: directory
      mode: '0755'

  - name: "Create mimir conf dir if not exists"
    delegate_to: localhost
    changed_when: false
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}/mimir"
      state: directory
      mode: '0755'


  - name: "Create tempo conf dir if not exists"
    delegate_to: localhost
    changed_when: false
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}/tempo"
      state: directory
      mode: '0755'


  - name: "Create loki conf dir if not exists"
    delegate_to: localhost
    changed_when: false
    run_once: true
    ansible.builtin.file:
      path: "{{local_template_conf_dir}}/loki"
      state: directory
      mode: '0755'

  - name: Template observability.j2
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: observability.j2
      dest: "{{role_path}}/files/observability.nomad"

  - name: Template mimir.j2
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: mimir/mimir.j2
      dest: "{{role_path}}/files/configs/mimir/mimir.tpl"

  - name: Template loki.j2
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: loki/loki.j2
      dest: "{{role_path}}/files/configs/loki/loki.tpl"

  - name: Template tempo.j2
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: tempo/tempo.j2
      dest: "{{role_path}}/files/configs/tempo/tempo.tpl"

  - name: Template grafana_agent agent.yaml
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: grafana_agent/agent.j2
      dest: "{{role_path}}/files/configs/grafana_agent/agent.tpl"


  - name: Template shell script create_buckets.sh
    delegate_to: localhost
    changed_when: false
    template:
      force: yes
      src: shell/create_buckets.sh
      dest: "{{role_path}}/files/configs/shell/create_buckets.tpl"

  - name: "Copy observability.nomad"
    become: true
    copy:
      force: true
      src: observability.nomad
      dest: "{{stack_deployment_dir}}/observability.nomad"
      mode: '0755'

  - name: "Delete remote configs"
    become: true
    changed_when: false
    ansible.builtin.file:
      path: "{{stack_deployment_dir}}/configs"
      state: absent

  - name: "observability.nomad templates to {{stack_deployment_dir}}/configs"
    become: true
    changed_when: false
    copy:
      force: true
      src: "{{role_path}}/files/configs"
      dest: "{{stack_deployment_dir}}"
      mode: '0755'

  - name: "Create Variables in nomad"
    register: createvars
    failed_when: createvars.rc != 0
    shell: |
      nomad var put -force {{nomad_observability_job_path}} \
      keycloak_secret_observability_grafana={{keycloak_secret_observability_grafana}} \
      minio_loki_user={{minio_root_user}} \
      minio_loki_secret={{minio_root_password}} \
      minio_tempo_user={{minio_root_user}} \
      minio_tempo_secret={{minio_root_password}} \
      minio_mimir_user={{minio_root_user}} \
      minio_mimir_secret={{minio_root_password}}      

    environment:
      - NOMAD_ADDR: "https://localhost:4646"
      - NOMAD_CACERT: "{{cluster_intermediate_ca_bundle}}"
      - NOMAD_CLIENT_CERT: "{{nomad_cli_cert}}"
      - NOMAD_CLIENT_KEY: "{{nomad_cli_cert_key}}"



  #
  #    - name: "Slurp {{stack_deployment_dir}}/observability.nomad from master_0"
  #      ansible.builtin.slurp:
  #        src: "{{stack_deployment_dir}}/observability.nomad"
  #      register: job

#  - name: Create job
#    community.general.nomad_job:
#      # host: "{{masters[0]}}"
#      client_cert: "{{nomad_cli_cert}}"
#      client_key: "{{nomad_cli_cert_key}}"
#      host: localhost
#      state: present
#      force_start: true
#      #        content: "{{ job.content | b64decode }}"
#      content: "{{ lookup('ansible.builtin.file', '{{role_path}}/files/observability.nomad') }}"
#      timeout: 120

  # The ansible nomad module can't handle jobs with files in template stanza
  # See https://github.com/ansible-collections/community.general/issues/5902
  - name: "Create job"
    async: 360
    poll: 5
    shell: nomad job run observability.nomad
    environment:
      - NOMAD_ADDR: "https://localhost:4646"
      - NOMAD_CACERT: "{{cluster_intermediate_ca_bundle}}"
      - NOMAD_CLIENT_CERT: "{{nomad_cli_cert}}"
      - NOMAD_CLIENT_KEY: "{{nomad_cli_cert_key}}"
    args:
      chdir: "{{stack_deployment_dir}}"

  - name: Force job to start observability
    community.general.nomad_job:
      client_cert: "{{nomad_cli_cert}}"
      client_key: "{{nomad_cli_cert_key}}"
      host: localhost
      state: present
      name: observability
      timeout: 360
      force_start: true

  vars:
    - nomad_observability_job_path: nomad/jobs/observability
    - local_template_conf_dir: "{{role_path}}/files/configs"
