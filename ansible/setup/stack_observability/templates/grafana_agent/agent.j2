server:
  log_level: info

metrics:
  wal_directory: "/data/wal"
  global:
    scrape_interval: 10s
    remote_write:
++- range service "mimir" ++
      - url: http://++.Name++.service.consul:++.Port++/api/v1/push
++- end ++
  configs:
    - name: integrations
      scrape_configs:
        - job_name: integrations/traefik
          scheme: http
          metrics_path: '/metrics'
          static_configs:
          - targets:
++- range service "traefik" ++
            - ++.Address++:8081
++- end ++

        # grab all metric endpoints with stadanrd /metrics endpoint
        - job_name: "integrations/consul_sd"
          consul_sd_configs:
            - server: "consul.service.consul:8501"
              tags: ["prometheus"]
              tls_config:
                insecure_skip_verify: true
                ca_file: "/certs/ca/ca.crt"
                cert_file: "/certs/consul/consul.pem"
                key_file: "/certs/consul/consul-key.pem"
              datacenter: "{{data_center}}"
              scheme: https
          relabel_configs:
            - source_labels: [__meta_consul_node]
              target_label: instance
            - source_labels: [__meta_consul_service]
              target_label: service
#            - source_labels: [__meta_consul_tags]
#              separator:     ','
#              regex:         'prometheus:([^=]+)=([^,]+)'
#              target_label:  '$${1}'
#              replacement:   '$${2}'
            - source_labels: [__meta_consul_tags]
              separator:     ','
              regex:         '.*,prometheus:server_id=([^,]+),.*'
              target_label:  'server_id'
              replacement:   '$${1}'
            - source_labels: [__meta_consul_tags]
              separator:     ','
              regex:         '.*,prometheus:version=([^,]+),.*'
              target_label:  'version'
              replacement:   '$${1}'
            - source_labels: ['__meta_consul_tags']
              target_label: 'labels'
              regex: '(.+)'
              replacement: '$${1}'
              action: 'keep'
 #           - action: replace
 #             replacement: '1'
 #             target_label: 'test'
          metric_relabel_configs:
            - action: labeldrop
              regex: 'exported_.*'


        - job_name: "integrations/consul_sd_minio"
          metrics_path: "/minio/v2/metrics/cluster"
          consul_sd_configs:
            - server: "consul.service.consul:8501"
              tags: ["prometheus_minio"]
              tls_config:
                insecure_skip_verify: true
                ca_file: "/certs/ca/ca.crt"
                cert_file: "/certs/consul/consul.pem"
                key_file: "/certs/consul/consul-key.pem"
              datacenter: "{{data_center}}"
              scheme: https
          relabel_configs:
            - source_labels: [__meta_consul_node]
              target_label: instance
            - source_labels: [__meta_consul_service]
              target_label: service
#            - source_labels: [__meta_consul_tags]
#              separator:     ','
#              regex:         'prometheus:([^=]+)=([^,]+)'
#              target_label:  '$${1}'
#              replacement:   '$${2}'
            - source_labels: [__meta_consul_tags]
              separator:     ','
              regex:         '.*,prometheus:server=([^,]+),.*'
              target_label:  'server'
              replacement:   '$${1}'
            - source_labels: [__meta_consul_tags]
              separator:     ','
              regex:         '.*,prometheus:version=([^,]+),.*'
              target_label:  'version'
              replacement:   '$${1}'
            - source_labels: ['__meta_consul_tags']
              target_label: 'labels'
              regex: '(.+)'
              replacement: '$${1}'
              action: 'keep'
#            - action: replace
#              replacement: '38'
#              target_label: 'test'
          metric_relabel_configs:
            - action: labeldrop
              regex: 'exported_.*'

        - job_name: integrations/blackbox # To get metrics about the exporter itself
          metrics_path: /metrics
          static_configs:
            - targets:
++- range  $index, $service := service "blackbox-exporter" -++
++- if eq $index 0 ++
              - ++.Name++.service.consul:++.Port++
++- end ++
++- end ++

        - job_name: integrations/blackbox-checks # To get metrics about the exporter’s targets
          metrics_path: /probe
          params:
            module: [http_integrations]
          static_configs:
            - targets:
              - https://master-01.node.consul:12345/agent/api/v1/instances
              - https://worker-01.node.consul:12345/agent/api/v1/instances
              - https://worker-02.node.consul:12345/agent/api/v1/instances
              - https://worker-03.node.consul:12345/agent/api/v1/instances
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
              regex: 'https://(.+)\.node\.consul.*'
              replacement: '$1'
            - target_label: __address__
++- range  $index, $service := service "blackbox-exporter" -++
++- if eq $index 0 ++
              replacement: ++.Name++.service.consul:++.Port++ # The blackbox exporter’s real hostname:port
++- end ++
++- end ++