- name: Install nomad systemd service
  become: true
  block:
    - name: Template nomad.service.server
      template:
        force: yes
        src: service/nomad.service.j2
        dest: /etc/systemd/system/nomad.service
      register: serviceconfig


    - name: stop nomad service
      when: serviceconfig.changed
      failed_when: false
      service:
        name: nomad
        state: stopped

    - name: Reload systemd
      when: serviceconfig.changed
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: start nomad service
      service:
        name: nomad
        state: started
        enabled: yes
      register: nomadservice
      until: nomadservice.status.ActiveState == "active"
      retries: 10
      delay: 5

    - name: Enable Memory Oversubscription
      become: false
      when: is_master_host
      run_once: true
      shell: |
        curl  -s  -N \
        --cacert "${NOMAD_CACERT}" \
        --cert "${NOMAD_CLIENT_CERT}" \
        --key "${NOMAD_CLIENT_KEY}" \
        "${NOMAD_ADDR}/v1/operator/scheduler/configuration" |\
        jq '.SchedulerConfig | .SchedulerAlgorithm= "spread" |  .MemoryOversubscriptionEnabled=true | .PreemptionConfig.SysBatchSchedulerEnabled=true | .PreemptionConfig.BatchSchedulerEnabled=true  | .PreemptionConfig.ServiceSchedulerEnabled=true'   |\
        curl \
        --cacert "${NOMAD_CACERT}" \
        --cert "${NOMAD_CLIENT_CERT}" \
        --key "${NOMAD_CLIENT_KEY}" \
        -X PUT $NOMAD_ADDR/v1/operator/scheduler/configuration -d @-
      changed_when: false
      environment:
        - NOMAD_ADDR: "https://localhost:4646"
        - NOMAD_CACERT: "{{cluster_intermediate_ca_bundle}}"
        - NOMAD_CLIENT_CERT: "{{nomad_cert}}"
        - NOMAD_CLIENT_KEY: "{{nomad_cert_key}}"

#     failed_when: install.rc > 2

