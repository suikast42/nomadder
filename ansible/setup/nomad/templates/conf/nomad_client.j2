log_level = "DEBUG"
name = "{{host_name}}"
datacenter = "{{data_center}}"
data_dir =  "{{nomad_data_dir}}"
bind_addr = "0.0.0.0" # the default
advertise {
  # Defaults to the first private IP address.
  http = "{{host_ip}}"
  rpc  = "{{host_ip}}"
  serf = "{{host_ip}}"
}
client {
  enabled = true
  meta {
    node_type= "worker"
    connect.log_level = "debug"
  }
  host_volume "ca_cert" {
    path      = "/usr/local/share/ca-certificates/cloudlocal"
    read_only = true
  }
  host_volume "cert_ingress" {
    path      = "{{base_cert_dir}}/ingress"
    read_only = true
  }
  ## Cert consul client
  ## Needed for consul_sd_configs
  ## Should be deleted after resolve https://github.com/suikast42/nomadder/issues/100
  host_volume "cert_consul" {
    path      = "{{base_cert_dir}}/consul"
    read_only = true
  }
  host_network "private" {
    interface = "eth0"
    #cidr = "203.0.113.0/24"
    #reserved_ports = "22,80"
  }
  host_network "default" {
      interface = "eth1"
  }
  host_network "public" {
    interface = "eth1"
  }
  host_network "local" {
    interface = "lo"
  }
  host_network "nomad" {
    interface = "nomad"
  }
}

tls {
  http = true
  rpc  = true

  ca_file   = "{{cluster_intermediate_ca_bundle}}"
  cert_file = "{{nomad_cert}}"
  key_file  = "{{nomad_cert_key}}"

  verify_server_hostname = true
  verify_https_client    = true
}

consul{
  ssl= true
  address = "127.0.0.1:8501"
  # this works only with ACL enabled
  allow_unauthenticated= true
  ca_file   = "{{cluster_intermediate_ca_bundle}}"
  cert_file = "{{nomad_cert}}"
  key_file  = "{{nomad_cert_key}}"
}

plugin "docker"{
config{
    infra_image = "{{nomad_infra_image}}"
  }
}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}

plugin "docker" {
  config {
#    volumes {
#      enabled = true
#      selinuxlabel = "z"
#    }
    extra_labels = ["job_name", "job_id", "task_group_name", "task_name", "namespace", "node_name", "node_id"]
    logging {
      type = "journald"
       config {
          labels-regex =".*"
       }
    }
    gc {
      image       = true
      image_delay = "3m"
      container   = true

      dangling_containers {
        enabled        = true
        dry_run        = false
        period         = "5m"
        creation_grace = "5m"
      }
    }

#    allow_privileged = true
  }
}