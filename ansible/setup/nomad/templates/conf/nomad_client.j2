log_level = "DEBUG"
name = "{{host_name}}"
datacenter = "{{data_center}}"
data_dir =  "{{nomad_data_dir}}"
bind_addr = "0.0.0.0" # the default

leave_on_interrupt= true
leave_on_terminate = true

advertise {
  # Defaults to the first private IP address.
  http = "{{host_ip}}"
  rpc  = "{{host_ip}}"
  serf = "{{host_ip}}"
}
client {
  enabled = true
  meta {
    node_type= "worker"
    connect.log_level = "debug"
 #   connect.sidecar_image: "{{registry_dns}}/envoyproxy/envoy:v{{envoy_version}}"
  }
  server_join {
    retry_join =  {{masters | to_json }}
    retry_max = 0
    retry_interval = "15s"
  }
#  drain_on_shutdown {
#    deadline           = "30s"
#    force              = false
#    ignore_system_jobs = false
#  }
  host_volume "ca_cert" {
    path      = "/usr/local/share/ca-certificates/cloudlocal"
    read_only = true
  }
  host_volume "cert_ingress" {
    path      = "{{base_cert_dir}}/ingress"
    read_only = true
  }
  ## Cert consul client
  ## Needed for consul_sd_configs
  ## Should be deleted after resolve https://github.com/suikast42/nomadder/issues/100
  host_volume "cert_consul" {
    path      = "{{base_cert_dir}}/consul"
    read_only = true
  }
  host_network "private" {
    interface = "eth0"
    #cidr = "203.0.113.0/24"
    #reserved_ports = "22,80"
  }
  host_network "default" {
      interface = "eth1"
  }
  host_network "public" {
    interface = "eth1"
  }
  host_network "local" {
    interface = "lo"
  }
  host_network "nomad" {
    interface = "nomad"
  }
  reserved {
  # cpu (int: 0) - Specifies the amount of CPU to reserve, in MHz.
  # cores (int: 0) - Specifies the number of CPU cores to reserve.
  # memory (int: 0) - Specifies the amount of memory to reserve, in MB.
  # disk (int: 0) - Specifies the amount of disk to reserve, in MB.
  # reserved_ports (string: "") - Specifies a comma-separated list of ports to reserve on all fingerprinted network devices. Ranges can be specified by using a hyphen separating the two inclusive ends. See also host_network for reserving ports on specific host networks.
    cpu    = 1000
    memory = 2048
  }
  max_kill_timeout  = "1m"
}

tls {
  http = true
  rpc  = true

  ca_file   = "{{cluster_intermediate_ca_bundle}}"
  cert_file = "{{nomad_cert}}"
  key_file  = "{{nomad_cert_key}}"

  verify_server_hostname = true
  verify_https_client    = true
}

consul{
  ssl= true
  address = "127.0.0.1:8501"
  grpc_address = "127.0.0.1:8503"
  # this works only with ACL enabled
  allow_unauthenticated= true
  ca_file   = "{{cluster_intermediate_ca_bundle}}"
  grpc_ca_file   = "{{cluster_intermediate_ca_bundle}}"
  cert_file = "{{consul_cert}}"
  key_file  = "{{consul_cert_key}}"
}


telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}

plugin "docker" {
  config {
    allow_privileged = false
    disable_log_collection  = false
#    volumes {
#      enabled = true
#      selinuxlabel = "z"
#    }
    infra_image = "{{nomad_infra_image}}"
    infra_image_pull_timeout ="30m"
    extra_labels = ["job_name", "job_id", "task_group_name", "task_name", "namespace", "node_name", "node_id"]
    logging {
      type = "journald"
       config {
          labels-regex =".*"
       }
    }
    gc{
      container = true
      dangling_containers{
        enabled = true
      # period = "3m"
      # creation_grace = "5m"
      }
    }

  }
}