---
#- name: get service facts
#  service_facts:
#- debug:
#    var: ansible_facts.services['ufw.service']

- name: Set local cert path
  set_fact:
    #cert path on nodes
    vault_cert_path: /etc/opt/certs/vault
    # cert path on local host
    local_ca_cert_path: "{{role_path}}/../certificates_generate/files/certs/vault"
    vault_cert: "{{vault_cert_path}}/vault.pem"
    vault_cert_key: "{{vault_cert_path}}/vault/vault-key.pem"
    ca_cert: "{{ca_cert_path}}/ca/ca.pem"

    cacheable: true

#- name: "Create vault user"
#  import_tasks: user.yml
#
#- name: "Vault certificates"
#  import_tasks: certificates.yml
#
#- name: "Vault installation"
#  import_tasks: vault_install.yml

#- name : Check vault installation present
#  stat:
#    path: /usr/local/bin/vault
#  register: vaultInstalled
#
#- name: Vault install
#  become: true
#  when: not vaultInstalled.stat.exists
#  block:
#
#  - name: Download vault binary
#    get_url:
#      url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
#      dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
#      owner: "{{ vault_user }}"
#      group: "{{ vault_group }}"
#      mode: 0755
#      checksum: "{{vault_checksum}}"
#    register: vault_download
#
#  - name: "Unzip vault archive"
#    unarchive:
#      src: "{{ vault_download.dest }}"
#      dest: /usr/local/bin
#      copy: no
#      owner: "{{ vault_user }}"
#      group: "{{ vault_group }}"
#      mode: 0755
#
#  - name: "Set vault binary capabilities"
#    capabilities:
#      path: /usr/local/bin/vault
#      capability: cap_ipc_lock+ep
#      state: present
#
#  - name: Copy systemd init file
#    template:
#      src: init.service.j2
#      dest: /etc/systemd/system/vault.service
#      owner: root
#      group: root
#    notify: systemd_reload
#
#  - name: config file
#    template:
#      src: vault.hcl.j2
#      dest: /etc/vault.hcl
#      owner: "{{ vault_user }}"
#      group: "{{ vault_group }}"
#
#  - name: vault service
#    service:
#      name: vault
#      state: started
#      enabled: yes
#
#  tags:
#    - vault
#
#
## Copy the templates again and restart vault service if config changed
#- name: Vault config
#  become: true
#  block:
#    - name: Copy systemd init file
#      template:
#        force: yes # replace the remote file when contents are different than the source.
#        src: init.service.j2
#        dest: /etc/systemd/system/vault.service
#        owner: root
#        group: root
#      notify: systemd_reload
#      register: service
#
#    - name: config file
#      template:
#        force: yes # replace the remote file when contents are different than the source.
#        src: vault.hcl.j2
#        dest: /etc/vault.hcl
#        owner: "{{ vault_user }}"
#        group: "{{ vault_group }}"
#      notify: systemd_reload
#      register: conf
#
#
#    - name: restart vault service
#      service:
#        name: vault
#        state: restarted
#      when: service.changed or conf.changed
#
#  tags:
#    - vault