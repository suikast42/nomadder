---
#- name: get service facts
#  service_facts:
#- debug:
#    var: ansible_facts.services['ufw.service']

- name : Check vault installation present
  stat:
    path: /usr/local/bin/vault
  register: vaultInstalled

- name: Vault setup
  become: true
  when: not vaultInstalled.stat.exists
  block:

  - name: "Creating group {{ vault_group }}"
    group:
      name: "{{ vault_group }}"
      state: present

  - name: "Creating user {{ vault_group }}"
    user:
      name: "{{ vault_user }}"
      group: "{{ vault_group }}"
      system: yes
      shell: "/sbin/nologin"
      comment: "vault nologin User"
      createhome: "no"
      state: present

  - name: Download vault binary
    get_url:
      url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
      dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
      owner: "{{ vault_user }}"
      group: "{{ vault_group }}"
      mode: 0755
      checksum: "{{vault_checksum}}"
    register: vault_download

  - name: "Unzip vault archive"
    unarchive:
      src: "{{ vault_download.dest }}"
      dest: /usr/local/bin
      copy: no
      owner: "{{ vault_user }}"
      group: "{{ vault_group }}"
      mode: 0755

  - name: "Set vault binary capabilities"
    capabilities:
      path: /usr/local/bin/vault
      capability: cap_ipc_lock+ep
      state: present

  - name: Copy systemd init file
    template:
      src: init.service.j2
      dest: /etc/systemd/system/vault.service
      owner: root
      group: root
    notify: systemd_reload

  - name: config file
    template:
      src: vault.hcl.j2
      dest: /etc/vault.hcl
      owner: "{{ vault_user }}"
      group: "{{ vault_group }}"

  - name: vault service
    service:
      name: vault
      state: started
      enabled: yes

  tags:
    - vault