---
- name: "Create cert local cert dirs"
  shell: |
    mkdir -p {{role_path}}/files/certs/ca && \
    mkdir -p {{role_path}}/files/certs/cluster-ca && \
    mkdir -p {{role_path}}/files/certs/vault


- name: Template ca.json
  template:
    force: yes
    src: ca.j2
    dest: "{{role_path}}/files/config/ca.json"

- name: Template cluster-ca.json
  template:
    force: yes
    src: cluster-ca.j2
    dest: "{{role_path}}/files/config/cluster-ca.json"

#- name: Template vault.json
#  template:
#    force: yes
#    src: vault.j2
#    dest: "{{role_path}}/files/config/vault.json"



- name: "Generate ca certificates"
  shell: |
    cfssl gencert -initca ../../config/ca.json | cfssljson -bare ca
  args:
    chdir: "{{role_path}}/files/certs/ca"

- name: "Generate cluster-ca certificates"
  shell: |
      cfssl gencert -initca ../../config/cluster-ca.json | cfssljson -bare cluster-ca
      cfssl sign \
        -ca ../ca/ca.pem \
        -ca-key ../ca/ca-key.pem \
        -config ../../cfssl/config.json \
        -profile intermediate_ca  ../cluster-ca/cluster-ca.csr | cfssljson -bare cluster-ca
      cp ../ca/ca.pem ca.pem
      mkbundle -f cluster-ca-bundle.pem ../cluster-ca
      rm ca.pem
  args:
    chdir: "{{role_path}}/files/certs/cluster-ca"
