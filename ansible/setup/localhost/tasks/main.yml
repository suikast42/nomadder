- name: Localhost setup
  block:

  - name: "Delete download dir"
    become: true
    when: delete_downloads |bool == true
    ansible.builtin.file:
      path: "{{download_dir}}"
      state: absent

  - name: "Create download dir"
    become: true
    ansible.builtin.file:
      path: "{{download_dir}}"
      owner: "{{ansible_user}}"
      group: "{{ansible_user}}"
      state: directory
      mode: '0755'

  - name: Install pip modules
    pip:
      name:
        - pexpect
        - docker
      extra_args: --user --break-system-packages

  # Install secint on localhost
  # Need for autoconfigure consul
  # See https://github.com/hashicorp/learn-consul-docker/tree/main/datacenter-deploy-auto-config/secint
  - name: Install secint
    shell: |
      git clone https://github.com/banks/secint
      cd secint
      go build 
      sudo mv secint /usr/local/bin
      cd ..
      rm -R secint
    args:
      creates: /usr/local/bin/secint # oh-my-posh is already installed
#    register: build
#
  - name: "Debug Delete protoc"
    debug:
      msg: "update_all: {{update_all}}, uninstall_protoc:{{uninstall_protoc}}"

  - name: "Delete protoc"
    become: true
    when: uninstall_protoc|bool == true or update_protoc|bool == true
    shell: |
      rm -fr /usr/local/bin/protoc*
      rm -fr /usr/local/bin/include
      rm -fr /tmp/protoc
      rm -fr /usr/local/bin/buf


  - name: "Download protoc v{{version_protoc}}"
    get_url:
      url: https://github.com/protocolbuffers/protobuf/releases/download/v{{version_protoc}}/protoc-{{version_protoc}}-linux-x86_64.zip
      dest: "/{{download_dir}}/protoc_{{version_protoc}}.tgz"
      mode: 0755
    register: protoc_download

  - name: "Create tmp dir"
    file:
      path: "/tmp/protoc"
      state: directory
      mode: '0755'

  - name: "Unzip protoc"
    become: true
    unarchive:
      src: "{{protoc_download.dest}}"
      dest: "/tmp/protoc"
      copy: no


  - name: "Install protoc in /usr/local/bin"
    register: installProto
    failed_when: installProto.rc != 0
    shell: |
      sudo mv bin/protoc /usr/local/bin
      sudo mv include   /usr/local/bin/include
      ret_code=$?
      if [ $ret_code != 0 ]; then exit $ret_code; fi
      
      go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v{{version_proto_grpc}}
      sudo mv /home/{{ansible_user}}/go/bin/protoc-gen-go-grpc  /usr/local/bin
      ret_code=$?
      #printf 'Error in execing gosu, %d\n' $ret_code
      if [ $ret_code != 0 ]; then exit $ret_code; fi
      
      go install google.golang.org/protobuf/cmd/protoc-gen-go@v{{version_proto_gen}} 
      sudo mv /home/{{ansible_user}}/go/bin/protoc-gen-go /usr/local/bin

      go install github.com/fullstorydev/grpcurl/cmd/grpcurl@v{{version_proto_grpc_curl}}
      sudo mv /home/{{ansible_user}}/go/bin/grpcurl   /usr/local/bin
      ret_code=$?
      if [ $ret_code != 0 ]; then exit $ret_code; fi


    args:
      chdir: "/tmp/protoc"
      creates: /usr/local/bin/protoc

  - name: "Install result protoc"
    debug:
      msg: "{{ installProto }}"

  - name: "Delete vim hcl dir  ~/.vim/pack/jvirtanen/start if present"
    when: update_vim_hcl|bool == true
    ansible.builtin.file:
      path: "~/.vim/pack/jvirtanen/start"
      state: absent

  - name: "vim hcl"
    delay: 0
    async: 300
    poll: 1
    shell: |
      mkdir -p ~/.vim/pack/jvirtanen/start
      cd ~/.vim/pack/jvirtanen/start
      git clone https://github.com/jvirtanen/vim-hcl.git
    args:
      creates: ~/.vim/pack/jvirtanen/start

  vars:
    # Override the download_dir for localhost
    download_dir: "/home/{{ansible_user}}/downloads"
  tags:
    - localhost